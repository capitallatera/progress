{"version":3,"sources":["Component/ModalForm.jsx","Component/AddModal.jsx","Component/DataTable.jsx","App.js","reportWebVitals.js","index.js"],"names":["layout","labelCol","span","wrapperCol","tailLayout","offset","ModalForm","form","setIsVisible","finish","onFinish","resetFields","Item","name","label","type","htmlType","AddModal","isVisible","visible","footer","closable","DataTable","dataSource","onChange","check","setId","id","setDataSource","removeItem","useEffect","array","map","data","key","action","columns","title","width","render","text","onClick","checked","dataIndex","className","pagination","App","useState","Form","useForm","JSON","parse","localStorage","getItem","setCheck","setItem","stringify","count","filter","item","value","getFieldsValue","nanoid","e","target","console","log","Math","floor","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92c4b323.chunk.js","sourcesContent":["import React from 'react';\nimport { Form, Input, Button } from 'antd';\n\nconst layout = {\n  labelCol: {\n    span: 2,\n  },\n  wrapperCol: {\n    span: 22,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 12,\n    span: 12,\n  },\n};\nconst finish = (value) => {\n  console.log(value, 'Finish');\n}\n\n\n\nconst ModalForm = ({ form, setIsVisible, finish }) => {\n  const resetForm = () => {\n    form.resetFields()\n  }\n  return (\n    <div>\n      <Form\n        {...layout}\n        form={form}\n        onFinish={() => {\n          finish();\n          setIsVisible(false);\n          resetForm();\n        }}\n      >\n        <Form.Item\n          name=\"task\"\n          label=\"Task\"\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          {...tailLayout}\n        >\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n\n      </Form>\n    </div>\n  )\n}\nexport default ModalForm;","import { Modal } from 'antd';\nimport React from 'react';\nimport ModalForm from './ModalForm';\n// import ReactDOM from 'react-dom'\nconst AddModal = ({ isVisible, setIsVisible, form, finish }) => {\n  return (\n    <Modal\n      visible={isVisible}\n      footer={false}\n      closable={false}\n    >\n      <ModalForm form={form} setIsVisible={setIsVisible}\n        finish={finish}\n      />\n    </Modal>\n  )\n}\nexport default AddModal;\n","import React, { useEffect } from 'react';\nimport { Checkbox, Table } from 'antd';\nimport './Style.css'\n\nconst DataTable = ({ dataSource, onChange, check, setId, id, setDataSource, removeItem }) => {\n\n  useEffect(() => {\n    const array = dataSource.map(data => {\n      if (data.key === id) {\n        return { ...data, action: check };\n      }\n      return data;\n\n    });\n    setDataSource(array)\n  }, [id, check]);\n\n\n  const columns = [\n    {\n      title: 'Action',\n      key: 'action',\n      width: 100,\n      render: (text) => (\n        <div onClick={() => { setId(text.key) }}>\n          <Checkbox checked={text.action} onChange={onChange} />\n        </div>\n      )\n    },\n    {\n      title: 'Task',\n      dataIndex: 'task',\n      key: 'task',\n      render: (text) => <p>{text}</p>\n    },\n    {\n      key: 'delete',\n      width: 100,\n      render: (text) => (\n        <div onClick={() => {\n          removeItem(text.key)\n        }}>\n          <a>Delete</a>\n        </div>\n      )\n    }\n\n  ];\n\n  return (\n    <div className='table-container'>\n      <Table dataSource={dataSource} columns={columns} pagination={false} />\n    </div>\n  )\n}\nexport default DataTable;","import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport { Avatar, Button, Form } from 'antd';\nimport AddModal from './Component/AddModal';\nimport DataTable from './Component/DataTable';\nimport { nanoid } from 'nanoid';\n\nfunction App() {\n  const [isVisible, setIsVisible] = useState(false);\n  const [form] = Form.useForm();\n  const [dataSource, setDataSource] = useState(JSON.parse(localStorage.getItem('data')) ? JSON.parse(localStorage.getItem('data')) : []);\n  const [check, setCheck] = useState(false);\n  const [id, setId] = useState(0);\n  const onChange = (e) => {\n    setCheck(e.target.checked)\n  }\n  const finish = (value) => {\n    if (!form.getFieldsValue()) return\n    const data = { key: nanoid(), action: false, ...form.getFieldsValue() }\n    setDataSource([...dataSource, data])\n  }\n\n  useEffect(() => {\n    localStorage.setItem('data', JSON.stringify(dataSource))\n  }, [dataSource])\n  const count = dataSource.filter((item) => item.action)\n\n  const removeItem = (id) => {\n    console.log('Working', id)\n    setDataSource(dataSource.filter((item) => (item.key !== id)))\n  }\n  return (\n    <div className=\"App\">\n      <div>Progress</div>\n      <Button type=\"primary\" onClick={() => setIsVisible(true)} >Add Task</Button>\n      <AddModal isVisible={isVisible} setIsVisible={setIsVisible} form={form}\n        finish={finish}\n      />\n      <DataTable dataSource={dataSource} onChange={onChange} check={check} setId={setId} id={id} setDataSource={setDataSource} removeItem={removeItem} />\n      <Avatar className='avatar-progress' >\n        {\n          Math.floor((count.length / dataSource.length) * 100) ?\n            Math.floor((count.length / dataSource.length) * 100)\n            :\n            0\n        }\n      </Avatar>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}